#pragma checksum "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/Bracket/Details.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "83f86ad1ebb1e9c5727c411cfe52bfedc95d5f89"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Bracket_Details), @"mvc.1.0.view", @"/Views/Bracket/Details.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Bracket/Details.cshtml", typeof(AspNetCore.Views_Bracket_Details))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/_ViewImports.cshtml"
using PickEm.Web;

#line default
#line hidden
#line 2 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/_ViewImports.cshtml"
using PickEm.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"83f86ad1ebb1e9c5727c411cfe52bfedc95d5f89", @"/Views/Bracket/Details.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"78160ceae16cede55e026c4e3809192e7c8a31ec", @"/Views/_ViewImports.cshtml")]
    public class Views_Bracket_Details : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PickEm.Models.BracketModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Edit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(35, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/Bracket/Details.cshtml"
  
    ViewData["Title"] = "Details";

#line default
#line hidden
            BeginContext(80, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 7 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/Bracket/Details.cshtml"
  
    var teams = new List<string>();
    foreach (var game in Model.Games)
    {
        teams.Append(game.HomeTeam.Name);
        teams.Append(game.AwayTeam.Name);
    }

#line default
#line hidden
            BeginContext(265, 135, true);
            WriteLiteral("\r\n<h1>Details</h1>\r\n\r\n<div>\r\n    <h4>BracketModel</h4>\r\n    <hr />\r\n    <dl class=\"row\">\r\n        <dt class = \"col-sm-2\">\r\n            ");
            EndContext();
            BeginContext(401, 40, false);
#line 23 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/Bracket/Details.cshtml"
       Write(Html.DisplayNameFor(model => model.Name));

#line default
#line hidden
            EndContext();
            BeginContext(441, 63, true);
            WriteLiteral("\r\n        </dt>\r\n        <dd class = \"col-sm-10\">\r\n            ");
            EndContext();
            BeginContext(505, 36, false);
#line 26 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/Bracket/Details.cshtml"
       Write(Html.DisplayFor(model => model.Name));

#line default
#line hidden
            EndContext();
            BeginContext(541, 485, true);
            WriteLiteral(@"
        </dd>
    </dl>

    <script src=""https://code.jquery.com/jquery-1.8.3.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js""></script>
    <script src=""https://cdn.jsdelivr.net/clipboard.js/1.6.0/clipboard.min.js""></script>
    <script>
			$(document).on('ready', function() {
				
				var knownBrackets = [2,4,8,16,32,64], // brackets with ""perfect"" proportions (full fields, no byes)
					exampleTeams = ");
            EndContext();
            BeginContext(1027, 5, false);
#line 37 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/Bracket/Details.cshtml"
                              Write(teams);

#line default
#line hidden
            EndContext();
            BeginContext(1032, 5966, true);
            WriteLiteral(@",
					bracketCount = 0;
				
				/*
				 * Build our bracket ""model""
				 */
				function getBracket(base) {
				
					var closest 		= _.find(knownBrackets, function(k) { return k>=base; }),
						byes 			= closest-base;
						
					if(byes>0)	base = closest;
				
					var brackets 	= [],
						round 		= 1,
						baseT 		= base/2,
						baseC 		= base/2,
						teamMark	= 0,
						nextInc		= base/2;
						
					for(i=1;i<=(base-1);i++) {
						var	baseR = i/baseT,
							isBye = false;
							
						if(byes>0 && (i%2!=0 || byes>=(baseT-i))) {
							isBye = true;
							byes--;
						}
						
						var last = _.map(_.filter(brackets, function(b) { return b.nextGame == i; }), function(b) { return {game:b.bracketNo,teams:b.teamnames}; });
						
						brackets.push({
							lastGames:	round==1 ? null : [last[0].game,last[1].game],
							nextGame:	nextInc+i>base-1?null:nextInc+i,
							teamnames:	round==1 ? [exampleTeams[teamMark],exampleTeams[teamMark+1]] : [last[0].teams[_.r");
            WriteLiteral(@"andom(1)],last[1].teams[_.random(1)]],
							bracketNo:	i,
							roundNo:	round,
							bye:		isBye
						});
						teamMark+=2;
						if(i%2!=0)	nextInc--;
						while(baseR>=1) {
							round++;
							baseC/= 2;
							baseT = baseT + baseC;
							baseR = i/baseT;
						}
					}
					
					renderBrackets(brackets);
				}
				
				/*
				 * Inject our brackets
				 */
				function renderBrackets(struct) {
					var groupCount	= _.uniq(_.map(struct, function(s) { return s.roundNo; })).length;
					
					var group	= $('<div class=""group'+(groupCount+1)+'"" id=""b'+bracketCount+'""></div>'),
						grouped = _.groupBy(struct, function(s) { return s.roundNo; });
					for(g=1;g<=groupCount;g++) {
						var round = $('<div class=""r'+g+'""></div>');
						_.each(grouped[g], function(gg) {
							if(gg.bye)
								round.append('<div></div>');
							else
								round.append('<div><div class=""bracketbox""><span class=""info"">'+gg.bracketNo+'</span><span class=""teama"" contenteditable>'+gg");
            WriteLiteral(@".teamnames[0]+'</span><span class=""teamb"" contenteditable>'+gg.teamnames[1]+'</span></div></div>');
						});
						group.append(round);
					}
					group.append('<div class=""r'+(groupCount+1)+'""><div class=""final""><div class=""bracketbox""><span class=""teamc"" contenteditable>'+_.last(struct).teamnames[_.random(1)]+'</span></div></div></div>');
					$('#brackets').append(group);
					
					bracketCount++;
					$('html,body').animate({
						scrollTop: $(""#b""+(bracketCount-1)).offset().top
					});
				}
				
				new Clipboard('.copyBtn', {
				    text: function(trigger) {
					return $('#brackets')[0].outerHTML;
				    }
				});
				
				new Clipboard('.copyBtnCss', {
				    text: function(trigger) {
					return $('style')[0].outerHTML + $('#brackets')[0].outerHTML;
				    }
				});
				
				$('#add').on('click', function() {
					var opts = parseInt(prompt('Bracket size (number of teams):',32));
					
					if(!_.isNaN(opts) && opts <= _.last(knownBrackets))
						getBracket(opt");
            WriteLiteral(@"s);
					else
						alert('The bracket size you specified is not currently supported.');
				});
				
			});
		</script>
		<style type=""text/css"">
			html, body, .brackets {
				width: 100%;
				min-height: 100%;
				font-family: ""Arial"", sans-serif;
			}
			.metroBtn {
				background-color: #2E7BCC;
				color: #fff;
				font-size: 1.1em;
				padding: 10px;
				display: inline-block;
				margin-bottom: 30px;
				cursor: pointer;
			}
			.brackets > div {
				vertical-align: top;
				clear: both;
			}
			.brackets > div > div {
				float: left;
				height: 100%;
			}
			.brackets > div > div > div {
				margin: 50px 0;
			}
			.brackets div.bracketbox {
				position: relative;
				width: 100%; height: 100%;
				border-top: 1px solid #555;
				border-right: 1px solid #555;
				border-bottom: 1px solid #555;
			}
			.brackets div.bracketbox > span.info {
				position: absolute;
				top: 25%;
				left: 25%;
				font-size: 0.8em;
				color: #BBB;
			}
			.brackets div");
            WriteLiteral(@".bracketbox > span {
				position: absolute;
				left: 5px;
				font-size: 0.85em;
			}
			.brackets div.bracketbox > span.teama {
				top: -20px;
			}
			.brackets div.bracketbox > span.teamb {
				bottom: -20px;
			}
			.brackets div.bracketbox > span.teamc {
				bottom: 1px;
			}
			.brackets > .group2 {
				height: 260px;
			}
			.brackets > .group2 > div {
				width: 49%;
			}
			.brackets > .group3 {
				height: 320px;
			}
			.brackets > .group3 > div {
				width: 32.7%;
			}
			.brackets > .group4 > div {
				width: 24.5%;
			}
			.brackets > .group5 > div {
				width: 19.6%;
			}
			.brackets > .group6 {
				height: 2000px;
			}
			.brackets > .group6 > div {
				width: 16.3%;
			}
			.brackets > div > .r1 > div {
				height: 60px;
			}
			.brackets > div > .r2 > div {
				margin: 80px 0 110px 0;
				height: 110px;
			}
			.brackets > div > .r3 > div {
				margin: 135px 0 220px 0;
				height: 220px;
			}
			.brackets > div > .r4 > div {
				margin: 25");
            WriteLiteral(@"0px 0 445px 0;
				height: 445px;
			}
			.brackets > div > .r5 > div {
				margin: 460px 0 0 0;
				height: 900px;
			}
			.brackets > div > .r6 > div {
				margin: 900px 0 0 0;
			}
			.brackets div.final > div.bracketbox {
				border-top: 0px;
				border-right: 0px;
				height: 0px;
			}
			.brackets > div > .r4 > div.drop {
				height: 180px;
				margin-bottom: 0px;
			}
			.brackets > div > .r5 > div.final.drop {
				margin-top: 345px;
				margin-bottom: 0px;
				height: 1px;
			}
			.brackets > div > div > div:last-of-type {
				margin-bottom: 0px;
			}
		</style>


        <div id=""add"" class=""metroBtn"">Add Bracket</div>
		<div class=""brackets"" id=""brackets"">
		</div>
		<div class=""metroBtn copyBtn"">Copy HTML</div>
		<div class=""metroBtn copyBtnCss"">Copy HTML w/ CSS</div>

</div>
<div>
    ");
            EndContext();
            BeginContext(6998, 54, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "83f86ad1ebb1e9c5727c411cfe52bfedc95d5f8912308", async() => {
                BeginContext(7044, 4, true);
                WriteLiteral("Edit");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 267 "/home/matthew.cline/repos/dot-net-sample/PickEm.Web/Views/Bracket/Details.cshtml"
                           WriteLiteral(Model.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7052, 8, true);
            WriteLiteral(" |\r\n    ");
            EndContext();
            BeginContext(7060, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "83f86ad1ebb1e9c5727c411cfe52bfedc95d5f8914597", async() => {
                BeginContext(7082, 12, true);
                WriteLiteral("Back to List");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7098, 10, true);
            WriteLiteral("\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PickEm.Models.BracketModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
